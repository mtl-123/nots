const n=JSON.parse('{"key":"v-eb3c33d0","path":"/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95.html","title":"高频面试","lang":"zh-CN","frontmatter":{"title":"高频面试","icon":"write","category":["算法","数据结构"],"tag":["算法","数据结构"],"sticky":false,"star":false,"article":true,"timeline":true,"description":"如何高效寻找素数 素数 如果一个数只能被1和它本身整除，那么这个数就是素数。 实现一个函数，输入一个正整数n，函数返回区间[2,n)中素数的个数。 函数签名如下：int countPrimes(int n) 一般实现 /*** * @Description: [2, n)素数的个数 * @Author: Mr.Tong */ int countPrimes(int n) { int count = 0; for (int i = 2; i &lt; n; i++) { if (isPrime(i)) { count++; } } return count; } /*** * @Description: 判断一个数是不是素数 * @Author: Mr.Tong */ boolean isPrime(int n) { for (int i = 2; i &lt; n; i++) { if (n % i == 0) { return false; } } return true; }","head":[["meta",{"property":"og:url","content":"https://gitee.com/oucystong/nots/codenotes/algdata/lbld/%E7%AE%97%E6%B3%95%E5%B0%8F%E6%8A%84%E9%AB%98%E9%A2%91%E9%9D%A2%E8%AF%95.html"}],["meta",{"property":"og:site_name","content":"小佟の学习笔记"}],["meta",{"property":"og:title","content":"高频面试"}],["meta",{"property":"og:description","content":"如何高效寻找素数 素数 如果一个数只能被1和它本身整除，那么这个数就是素数。 实现一个函数，输入一个正整数n，函数返回区间[2,n)中素数的个数。 函数签名如下：int countPrimes(int n) 一般实现 /*** * @Description: [2, n)素数的个数 * @Author: Mr.Tong */ int countPrimes(int n) { int count = 0; for (int i = 2; i &lt; n; i++) { if (isPrime(i)) { count++; } } return count; } /*** * @Description: 判断一个数是不是素数 * @Author: Mr.Tong */ boolean isPrime(int n) { for (int i = 2; i &lt; n; i++) { if (n % i == 0) { return false; } } return true; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-17T16:28:51.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:tag","content":"数据结构"}],["meta",{"property":"article:modified_time","content":"2022-12-17T16:28:51.000Z"}]]},"headers":[{"level":2,"title":"如何高效寻找素数","slug":"如何高效寻找素数","link":"#如何高效寻找素数","children":[{"level":3,"title":"一般实现","slug":"一般实现","link":"#一般实现","children":[]},{"level":3,"title":"稍加优化","slug":"稍加优化","link":"#稍加优化","children":[]},{"level":3,"title":"高效实现","slug":"高效实现","link":"#高效实现","children":[]}]},{"level":2,"title":"如何高效进行模幂运算","slug":"如何高效进行模幂运算","link":"#如何高效进行模幂运算","children":[{"level":3,"title":"如何处理数组指数","slug":"如何处理数组指数","link":"#如何处理数组指数","children":[]},{"level":3,"title":"如何处理mod运算","slug":"如何处理mod运算","link":"#如何处理mod运算","children":[]},{"level":3,"title":"如何高效求幂","slug":"如何高效求幂","link":"#如何高效求幂","children":[]}]},{"level":2,"title":"如何运用二分搜索算法","slug":"如何运用二分搜索算法","link":"#如何运用二分搜索算法","children":[]},{"level":2,"title":"如何高效解决接雨水问题","slug":"如何高效解决接雨水问题","link":"#如何高效解决接雨水问题","children":[]},{"level":2,"title":"如何去除有序数组的重复元素","slug":"如何去除有序数组的重复元素","link":"#如何去除有序数组的重复元素","children":[]},{"level":2,"title":"如何寻找最长回文子串","slug":"如何寻找最长回文子串","link":"#如何寻找最长回文子串","children":[]},{"level":2,"title":"如何运用贪心思想玩跳跃游戏","slug":"如何运用贪心思想玩跳跃游戏","link":"#如何运用贪心思想玩跳跃游戏","children":[]},{"level":2,"title":"如何运用贪心算法做时间管理","slug":"如何运用贪心算法做时间管理","link":"#如何运用贪心算法做时间管理","children":[]},{"level":2,"title":"如何判定括号合法性","slug":"如何判定括号合法性","link":"#如何判定括号合法性","children":[]},{"level":2,"title":"如何调度考生的座位","slug":"如何调度考生的座位","link":"#如何调度考生的座位","children":[]},{"level":2,"title":"Union-Find算法详解","slug":"union-find算法详解","link":"#union-find算法详解","children":[]},{"level":2,"title":"Union-Find算法应用","slug":"union-find算法应用","link":"#union-find算法应用","children":[]},{"level":2,"title":"一行代码就能解决的算法题","slug":"一行代码就能解决的算法题","link":"#一行代码就能解决的算法题","children":[{"level":3,"title":"Nim游戏","slug":"nim游戏","link":"#nim游戏","children":[]},{"level":3,"title":"石子游戏","slug":"石子游戏","link":"#石子游戏","children":[]},{"level":3,"title":"电灯开关问题","slug":"电灯开关问题","link":"#电灯开关问题","children":[]}]}],"git":{"createdTime":1671294531000,"updatedTime":1671294531000,"contributors":[{"name":"MeiChen","email":"13316899740@163.com","commits":1}]},"readingTime":{"minutes":3.59,"words":1078},"filePathRelative":"codenotes/algdata/lbld/算法小抄高频面试.md","localizedDate":"2022年12月18日","excerpt":"<h2> 如何高效寻找素数</h2>\\n<div class=\\"custom-container tip\\">\\n<p class=\\"custom-container-title\\">素数</p>\\n<p>如果一个数只能被1和它本身整除，那么这个数就是素数。</p>\\n</div>\\n<p>实现一个函数，输入一个正整数<code>n</code>，函数返回区间<code>[2,n)</code>中素数的个数。</p>\\n<p>函数签名如下：<code>int countPrimes(int n)</code></p>\\n<h3> 一般实现</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token doc-comment comment\\">/***\\n * @Description: [2, n)素数的个数\\n * @Author: Mr.Tong\\n */</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">countPrimes</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> n<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isPrime</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> count<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token doc-comment comment\\">/***\\n * @Description: 判断一个数是不是素数\\n * @Author: Mr.Tong\\n */</span>\\n<span class=\\"token keyword\\">boolean</span> <span class=\\"token function\\">isPrime</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> n<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> n<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>n <span class=\\"token operator\\">%</span> i <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
